package com.greathiit.lab.entity;

import java.util.ArrayList;
import java.util.List;

public class FurnitureExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table furniture
     *
     * @mbggenerated Mon Apr 23 17:37:39 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table furniture
     *
     * @mbggenerated Mon Apr 23 17:37:39 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table furniture
     *
     * @mbggenerated Mon Apr 23 17:37:39 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table furniture
     *
     * @mbggenerated Mon Apr 23 17:37:39 CST 2018
     */
    public FurnitureExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table furniture
     *
     * @mbggenerated Mon Apr 23 17:37:39 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table furniture
     *
     * @mbggenerated Mon Apr 23 17:37:39 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table furniture
     *
     * @mbggenerated Mon Apr 23 17:37:39 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table furniture
     *
     * @mbggenerated Mon Apr 23 17:37:39 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table furniture
     *
     * @mbggenerated Mon Apr 23 17:37:39 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table furniture
     *
     * @mbggenerated Mon Apr 23 17:37:39 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table furniture
     *
     * @mbggenerated Mon Apr 23 17:37:39 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table furniture
     *
     * @mbggenerated Mon Apr 23 17:37:39 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table furniture
     *
     * @mbggenerated Mon Apr 23 17:37:39 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table furniture
     *
     * @mbggenerated Mon Apr 23 17:37:39 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table furniture
     *
     * @mbggenerated Mon Apr 23 17:37:39 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andFunOidIsNull() {
            addCriterion("fun_oid is null");
            return (Criteria) this;
        }

        public Criteria andFunOidIsNotNull() {
            addCriterion("fun_oid is not null");
            return (Criteria) this;
        }

        public Criteria andFunOidEqualTo(String value) {
            addCriterion("fun_oid =", value, "funOid");
            return (Criteria) this;
        }

        public Criteria andFunOidNotEqualTo(String value) {
            addCriterion("fun_oid <>", value, "funOid");
            return (Criteria) this;
        }

        public Criteria andFunOidGreaterThan(String value) {
            addCriterion("fun_oid >", value, "funOid");
            return (Criteria) this;
        }

        public Criteria andFunOidGreaterThanOrEqualTo(String value) {
            addCriterion("fun_oid >=", value, "funOid");
            return (Criteria) this;
        }

        public Criteria andFunOidLessThan(String value) {
            addCriterion("fun_oid <", value, "funOid");
            return (Criteria) this;
        }

        public Criteria andFunOidLessThanOrEqualTo(String value) {
            addCriterion("fun_oid <=", value, "funOid");
            return (Criteria) this;
        }

        public Criteria andFunOidLike(String value) {
            addCriterion("fun_oid like", value, "funOid");
            return (Criteria) this;
        }

        public Criteria andFunOidNotLike(String value) {
            addCriterion("fun_oid not like", value, "funOid");
            return (Criteria) this;
        }

        public Criteria andFunOidIn(List<String> values) {
            addCriterion("fun_oid in", values, "funOid");
            return (Criteria) this;
        }

        public Criteria andFunOidNotIn(List<String> values) {
            addCriterion("fun_oid not in", values, "funOid");
            return (Criteria) this;
        }

        public Criteria andFunOidBetween(String value1, String value2) {
            addCriterion("fun_oid between", value1, value2, "funOid");
            return (Criteria) this;
        }

        public Criteria andFunOidNotBetween(String value1, String value2) {
            addCriterion("fun_oid not between", value1, value2, "funOid");
            return (Criteria) this;
        }

        public Criteria andFunIdIsNull() {
            addCriterion("fun_id is null");
            return (Criteria) this;
        }

        public Criteria andFunIdIsNotNull() {
            addCriterion("fun_id is not null");
            return (Criteria) this;
        }

        public Criteria andFunIdEqualTo(String value) {
            addCriterion("fun_id =", value, "funId");
            return (Criteria) this;
        }

        public Criteria andFunIdNotEqualTo(String value) {
            addCriterion("fun_id <>", value, "funId");
            return (Criteria) this;
        }

        public Criteria andFunIdGreaterThan(String value) {
            addCriterion("fun_id >", value, "funId");
            return (Criteria) this;
        }

        public Criteria andFunIdGreaterThanOrEqualTo(String value) {
            addCriterion("fun_id >=", value, "funId");
            return (Criteria) this;
        }

        public Criteria andFunIdLessThan(String value) {
            addCriterion("fun_id <", value, "funId");
            return (Criteria) this;
        }

        public Criteria andFunIdLessThanOrEqualTo(String value) {
            addCriterion("fun_id <=", value, "funId");
            return (Criteria) this;
        }

        public Criteria andFunIdLike(String value) {
            addCriterion("fun_id like", value, "funId");
            return (Criteria) this;
        }

        public Criteria andFunIdNotLike(String value) {
            addCriterion("fun_id not like", value, "funId");
            return (Criteria) this;
        }

        public Criteria andFunIdIn(List<String> values) {
            addCriterion("fun_id in", values, "funId");
            return (Criteria) this;
        }

        public Criteria andFunIdNotIn(List<String> values) {
            addCriterion("fun_id not in", values, "funId");
            return (Criteria) this;
        }

        public Criteria andFunIdBetween(String value1, String value2) {
            addCriterion("fun_id between", value1, value2, "funId");
            return (Criteria) this;
        }

        public Criteria andFunIdNotBetween(String value1, String value2) {
            addCriterion("fun_id not between", value1, value2, "funId");
            return (Criteria) this;
        }

        public Criteria andFunCountIsNull() {
            addCriterion("fun_count is null");
            return (Criteria) this;
        }

        public Criteria andFunCountIsNotNull() {
            addCriterion("fun_count is not null");
            return (Criteria) this;
        }

        public Criteria andFunCountEqualTo(Integer value) {
            addCriterion("fun_count =", value, "funCount");
            return (Criteria) this;
        }

        public Criteria andFunCountNotEqualTo(Integer value) {
            addCriterion("fun_count <>", value, "funCount");
            return (Criteria) this;
        }

        public Criteria andFunCountGreaterThan(Integer value) {
            addCriterion("fun_count >", value, "funCount");
            return (Criteria) this;
        }

        public Criteria andFunCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("fun_count >=", value, "funCount");
            return (Criteria) this;
        }

        public Criteria andFunCountLessThan(Integer value) {
            addCriterion("fun_count <", value, "funCount");
            return (Criteria) this;
        }

        public Criteria andFunCountLessThanOrEqualTo(Integer value) {
            addCriterion("fun_count <=", value, "funCount");
            return (Criteria) this;
        }

        public Criteria andFunCountIn(List<Integer> values) {
            addCriterion("fun_count in", values, "funCount");
            return (Criteria) this;
        }

        public Criteria andFunCountNotIn(List<Integer> values) {
            addCriterion("fun_count not in", values, "funCount");
            return (Criteria) this;
        }

        public Criteria andFunCountBetween(Integer value1, Integer value2) {
            addCriterion("fun_count between", value1, value2, "funCount");
            return (Criteria) this;
        }

        public Criteria andFunCountNotBetween(Integer value1, Integer value2) {
            addCriterion("fun_count not between", value1, value2, "funCount");
            return (Criteria) this;
        }

        public Criteria andLaborIdIsNull() {
            addCriterion("labor_id is null");
            return (Criteria) this;
        }

        public Criteria andLaborIdIsNotNull() {
            addCriterion("labor_id is not null");
            return (Criteria) this;
        }

        public Criteria andLaborIdEqualTo(Integer value) {
            addCriterion("labor_id =", value, "laborId");
            return (Criteria) this;
        }

        public Criteria andLaborIdNotEqualTo(Integer value) {
            addCriterion("labor_id <>", value, "laborId");
            return (Criteria) this;
        }

        public Criteria andLaborIdGreaterThan(Integer value) {
            addCriterion("labor_id >", value, "laborId");
            return (Criteria) this;
        }

        public Criteria andLaborIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("labor_id >=", value, "laborId");
            return (Criteria) this;
        }

        public Criteria andLaborIdLessThan(Integer value) {
            addCriterion("labor_id <", value, "laborId");
            return (Criteria) this;
        }

        public Criteria andLaborIdLessThanOrEqualTo(Integer value) {
            addCriterion("labor_id <=", value, "laborId");
            return (Criteria) this;
        }

        public Criteria andLaborIdIn(List<Integer> values) {
            addCriterion("labor_id in", values, "laborId");
            return (Criteria) this;
        }

        public Criteria andLaborIdNotIn(List<Integer> values) {
            addCriterion("labor_id not in", values, "laborId");
            return (Criteria) this;
        }

        public Criteria andLaborIdBetween(Integer value1, Integer value2) {
            addCriterion("labor_id between", value1, value2, "laborId");
            return (Criteria) this;
        }

        public Criteria andLaborIdNotBetween(Integer value1, Integer value2) {
            addCriterion("labor_id not between", value1, value2, "laborId");
            return (Criteria) this;
        }

        public Criteria andFuntypeIdIsNull() {
            addCriterion("funtype_id is null");
            return (Criteria) this;
        }

        public Criteria andFuntypeIdIsNotNull() {
            addCriterion("funtype_id is not null");
            return (Criteria) this;
        }

        public Criteria andFuntypeIdEqualTo(String value) {
            addCriterion("funtype_id =", value, "funtypeId");
            return (Criteria) this;
        }

        public Criteria andFuntypeIdNotEqualTo(String value) {
            addCriterion("funtype_id <>", value, "funtypeId");
            return (Criteria) this;
        }

        public Criteria andFuntypeIdGreaterThan(String value) {
            addCriterion("funtype_id >", value, "funtypeId");
            return (Criteria) this;
        }

        public Criteria andFuntypeIdGreaterThanOrEqualTo(String value) {
            addCriterion("funtype_id >=", value, "funtypeId");
            return (Criteria) this;
        }

        public Criteria andFuntypeIdLessThan(String value) {
            addCriterion("funtype_id <", value, "funtypeId");
            return (Criteria) this;
        }

        public Criteria andFuntypeIdLessThanOrEqualTo(String value) {
            addCriterion("funtype_id <=", value, "funtypeId");
            return (Criteria) this;
        }

        public Criteria andFuntypeIdLike(String value) {
            addCriterion("funtype_id like", value, "funtypeId");
            return (Criteria) this;
        }

        public Criteria andFuntypeIdNotLike(String value) {
            addCriterion("funtype_id not like", value, "funtypeId");
            return (Criteria) this;
        }

        public Criteria andFuntypeIdIn(List<String> values) {
            addCriterion("funtype_id in", values, "funtypeId");
            return (Criteria) this;
        }

        public Criteria andFuntypeIdNotIn(List<String> values) {
            addCriterion("funtype_id not in", values, "funtypeId");
            return (Criteria) this;
        }

        public Criteria andFuntypeIdBetween(String value1, String value2) {
            addCriterion("funtype_id between", value1, value2, "funtypeId");
            return (Criteria) this;
        }

        public Criteria andFuntypeIdNotBetween(String value1, String value2) {
            addCriterion("funtype_id not between", value1, value2, "funtypeId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table furniture
     *
     * @mbggenerated do_not_delete_during_merge Mon Apr 23 17:37:39 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table furniture
     *
     * @mbggenerated Mon Apr 23 17:37:39 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}