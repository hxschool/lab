package com.greathiit.lab.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class SanitationExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sanitation
     *
     * @mbggenerated Tue Apr 24 11:40:50 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sanitation
     *
     * @mbggenerated Tue Apr 24 11:40:50 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sanitation
     *
     * @mbggenerated Tue Apr 24 11:40:50 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sanitation
     *
     * @mbggenerated Tue Apr 24 11:40:50 CST 2018
     */
    public SanitationExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sanitation
     *
     * @mbggenerated Tue Apr 24 11:40:50 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sanitation
     *
     * @mbggenerated Tue Apr 24 11:40:50 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sanitation
     *
     * @mbggenerated Tue Apr 24 11:40:50 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sanitation
     *
     * @mbggenerated Tue Apr 24 11:40:50 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sanitation
     *
     * @mbggenerated Tue Apr 24 11:40:50 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sanitation
     *
     * @mbggenerated Tue Apr 24 11:40:50 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sanitation
     *
     * @mbggenerated Tue Apr 24 11:40:50 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sanitation
     *
     * @mbggenerated Tue Apr 24 11:40:50 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sanitation
     *
     * @mbggenerated Tue Apr 24 11:40:50 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sanitation
     *
     * @mbggenerated Tue Apr 24 11:40:50 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sanitation
     *
     * @mbggenerated Tue Apr 24 11:40:50 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andSanOidIsNull() {
            addCriterion("san_oid is null");
            return (Criteria) this;
        }

        public Criteria andSanOidIsNotNull() {
            addCriterion("san_oid is not null");
            return (Criteria) this;
        }

        public Criteria andSanOidEqualTo(String value) {
            addCriterion("san_oid =", value, "sanOid");
            return (Criteria) this;
        }

        public Criteria andSanOidNotEqualTo(String value) {
            addCriterion("san_oid <>", value, "sanOid");
            return (Criteria) this;
        }

        public Criteria andSanOidGreaterThan(String value) {
            addCriterion("san_oid >", value, "sanOid");
            return (Criteria) this;
        }

        public Criteria andSanOidGreaterThanOrEqualTo(String value) {
            addCriterion("san_oid >=", value, "sanOid");
            return (Criteria) this;
        }

        public Criteria andSanOidLessThan(String value) {
            addCriterion("san_oid <", value, "sanOid");
            return (Criteria) this;
        }

        public Criteria andSanOidLessThanOrEqualTo(String value) {
            addCriterion("san_oid <=", value, "sanOid");
            return (Criteria) this;
        }

        public Criteria andSanOidLike(String value) {
            addCriterion("san_oid like", value, "sanOid");
            return (Criteria) this;
        }

        public Criteria andSanOidNotLike(String value) {
            addCriterion("san_oid not like", value, "sanOid");
            return (Criteria) this;
        }

        public Criteria andSanOidIn(List<String> values) {
            addCriterion("san_oid in", values, "sanOid");
            return (Criteria) this;
        }

        public Criteria andSanOidNotIn(List<String> values) {
            addCriterion("san_oid not in", values, "sanOid");
            return (Criteria) this;
        }

        public Criteria andSanOidBetween(String value1, String value2) {
            addCriterion("san_oid between", value1, value2, "sanOid");
            return (Criteria) this;
        }

        public Criteria andSanOidNotBetween(String value1, String value2) {
            addCriterion("san_oid not between", value1, value2, "sanOid");
            return (Criteria) this;
        }

        public Criteria andSanIdIsNull() {
            addCriterion("san_id is null");
            return (Criteria) this;
        }

        public Criteria andSanIdIsNotNull() {
            addCriterion("san_id is not null");
            return (Criteria) this;
        }

        public Criteria andSanIdEqualTo(String value) {
            addCriterion("san_id =", value, "sanId");
            return (Criteria) this;
        }

        public Criteria andSanIdNotEqualTo(String value) {
            addCriterion("san_id <>", value, "sanId");
            return (Criteria) this;
        }

        public Criteria andSanIdGreaterThan(String value) {
            addCriterion("san_id >", value, "sanId");
            return (Criteria) this;
        }

        public Criteria andSanIdGreaterThanOrEqualTo(String value) {
            addCriterion("san_id >=", value, "sanId");
            return (Criteria) this;
        }

        public Criteria andSanIdLessThan(String value) {
            addCriterion("san_id <", value, "sanId");
            return (Criteria) this;
        }

        public Criteria andSanIdLessThanOrEqualTo(String value) {
            addCriterion("san_id <=", value, "sanId");
            return (Criteria) this;
        }

        public Criteria andSanIdLike(String value) {
            addCriterion("san_id like", value, "sanId");
            return (Criteria) this;
        }

        public Criteria andSanIdNotLike(String value) {
            addCriterion("san_id not like", value, "sanId");
            return (Criteria) this;
        }

        public Criteria andSanIdIn(List<String> values) {
            addCriterion("san_id in", values, "sanId");
            return (Criteria) this;
        }

        public Criteria andSanIdNotIn(List<String> values) {
            addCriterion("san_id not in", values, "sanId");
            return (Criteria) this;
        }

        public Criteria andSanIdBetween(String value1, String value2) {
            addCriterion("san_id between", value1, value2, "sanId");
            return (Criteria) this;
        }

        public Criteria andSanIdNotBetween(String value1, String value2) {
            addCriterion("san_id not between", value1, value2, "sanId");
            return (Criteria) this;
        }

        public Criteria andSanFenIsNull() {
            addCriterion("san_fen is null");
            return (Criteria) this;
        }

        public Criteria andSanFenIsNotNull() {
            addCriterion("san_fen is not null");
            return (Criteria) this;
        }

        public Criteria andSanFenEqualTo(Integer value) {
            addCriterion("san_fen =", value, "sanFen");
            return (Criteria) this;
        }

        public Criteria andSanFenNotEqualTo(Integer value) {
            addCriterion("san_fen <>", value, "sanFen");
            return (Criteria) this;
        }

        public Criteria andSanFenGreaterThan(Integer value) {
            addCriterion("san_fen >", value, "sanFen");
            return (Criteria) this;
        }

        public Criteria andSanFenGreaterThanOrEqualTo(Integer value) {
            addCriterion("san_fen >=", value, "sanFen");
            return (Criteria) this;
        }

        public Criteria andSanFenLessThan(Integer value) {
            addCriterion("san_fen <", value, "sanFen");
            return (Criteria) this;
        }

        public Criteria andSanFenLessThanOrEqualTo(Integer value) {
            addCriterion("san_fen <=", value, "sanFen");
            return (Criteria) this;
        }

        public Criteria andSanFenIn(List<Integer> values) {
            addCriterion("san_fen in", values, "sanFen");
            return (Criteria) this;
        }

        public Criteria andSanFenNotIn(List<Integer> values) {
            addCriterion("san_fen not in", values, "sanFen");
            return (Criteria) this;
        }

        public Criteria andSanFenBetween(Integer value1, Integer value2) {
            addCriterion("san_fen between", value1, value2, "sanFen");
            return (Criteria) this;
        }

        public Criteria andSanFenNotBetween(Integer value1, Integer value2) {
            addCriterion("san_fen not between", value1, value2, "sanFen");
            return (Criteria) this;
        }

        public Criteria andSanDateIsNull() {
            addCriterion("san_date is null");
            return (Criteria) this;
        }

        public Criteria andSanDateIsNotNull() {
            addCriterion("san_date is not null");
            return (Criteria) this;
        }

        public Criteria andSanDateEqualTo(Date value) {
            addCriterionForJDBCDate("san_date =", value, "sanDate");
            return (Criteria) this;
        }

        public Criteria andSanDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("san_date <>", value, "sanDate");
            return (Criteria) this;
        }

        public Criteria andSanDateGreaterThan(Date value) {
            addCriterionForJDBCDate("san_date >", value, "sanDate");
            return (Criteria) this;
        }

        public Criteria andSanDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("san_date >=", value, "sanDate");
            return (Criteria) this;
        }

        public Criteria andSanDateLessThan(Date value) {
            addCriterionForJDBCDate("san_date <", value, "sanDate");
            return (Criteria) this;
        }

        public Criteria andSanDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("san_date <=", value, "sanDate");
            return (Criteria) this;
        }

        public Criteria andSanDateIn(List<Date> values) {
            addCriterionForJDBCDate("san_date in", values, "sanDate");
            return (Criteria) this;
        }

        public Criteria andSanDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("san_date not in", values, "sanDate");
            return (Criteria) this;
        }

        public Criteria andSanDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("san_date between", value1, value2, "sanDate");
            return (Criteria) this;
        }

        public Criteria andSanDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("san_date not between", value1, value2, "sanDate");
            return (Criteria) this;
        }

        public Criteria andLaborIdIsNull() {
            addCriterion("labor_id is null");
            return (Criteria) this;
        }

        public Criteria andLaborIdIsNotNull() {
            addCriterion("labor_id is not null");
            return (Criteria) this;
        }

        public Criteria andLaborIdEqualTo(Integer value) {
            addCriterion("labor_id =", value, "laborId");
            return (Criteria) this;
        }

        public Criteria andLaborIdNotEqualTo(Integer value) {
            addCriterion("labor_id <>", value, "laborId");
            return (Criteria) this;
        }

        public Criteria andLaborIdGreaterThan(Integer value) {
            addCriterion("labor_id >", value, "laborId");
            return (Criteria) this;
        }

        public Criteria andLaborIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("labor_id >=", value, "laborId");
            return (Criteria) this;
        }

        public Criteria andLaborIdLessThan(Integer value) {
            addCriterion("labor_id <", value, "laborId");
            return (Criteria) this;
        }

        public Criteria andLaborIdLessThanOrEqualTo(Integer value) {
            addCriterion("labor_id <=", value, "laborId");
            return (Criteria) this;
        }

        public Criteria andLaborIdIn(List<Integer> values) {
            addCriterion("labor_id in", values, "laborId");
            return (Criteria) this;
        }

        public Criteria andLaborIdNotIn(List<Integer> values) {
            addCriterion("labor_id not in", values, "laborId");
            return (Criteria) this;
        }

        public Criteria andLaborIdBetween(Integer value1, Integer value2) {
            addCriterion("labor_id between", value1, value2, "laborId");
            return (Criteria) this;
        }

        public Criteria andLaborIdNotBetween(Integer value1, Integer value2) {
            addCriterion("labor_id not between", value1, value2, "laborId");
            return (Criteria) this;
        }

        public Criteria andSanDescIsNull() {
            addCriterion("san_desc is null");
            return (Criteria) this;
        }

        public Criteria andSanDescIsNotNull() {
            addCriterion("san_desc is not null");
            return (Criteria) this;
        }

        public Criteria andSanDescEqualTo(String value) {
            addCriterion("san_desc =", value, "sanDesc");
            return (Criteria) this;
        }

        public Criteria andSanDescNotEqualTo(String value) {
            addCriterion("san_desc <>", value, "sanDesc");
            return (Criteria) this;
        }

        public Criteria andSanDescGreaterThan(String value) {
            addCriterion("san_desc >", value, "sanDesc");
            return (Criteria) this;
        }

        public Criteria andSanDescGreaterThanOrEqualTo(String value) {
            addCriterion("san_desc >=", value, "sanDesc");
            return (Criteria) this;
        }

        public Criteria andSanDescLessThan(String value) {
            addCriterion("san_desc <", value, "sanDesc");
            return (Criteria) this;
        }

        public Criteria andSanDescLessThanOrEqualTo(String value) {
            addCriterion("san_desc <=", value, "sanDesc");
            return (Criteria) this;
        }

        public Criteria andSanDescLike(String value) {
            addCriterion("san_desc like", value, "sanDesc");
            return (Criteria) this;
        }

        public Criteria andSanDescNotLike(String value) {
            addCriterion("san_desc not like", value, "sanDesc");
            return (Criteria) this;
        }

        public Criteria andSanDescIn(List<String> values) {
            addCriterion("san_desc in", values, "sanDesc");
            return (Criteria) this;
        }

        public Criteria andSanDescNotIn(List<String> values) {
            addCriterion("san_desc not in", values, "sanDesc");
            return (Criteria) this;
        }

        public Criteria andSanDescBetween(String value1, String value2) {
            addCriterion("san_desc between", value1, value2, "sanDesc");
            return (Criteria) this;
        }

        public Criteria andSanDescNotBetween(String value1, String value2) {
            addCriterion("san_desc not between", value1, value2, "sanDesc");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sanitation
     *
     * @mbggenerated do_not_delete_during_merge Tue Apr 24 11:40:50 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sanitation
     *
     * @mbggenerated Tue Apr 24 11:40:50 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}